{
  "version": 3,
  "file": "sets.js",
  "sourceRoot": "../..",
  "sources": [
    "libs/js/sets.coffee"
  ],
  "names": [],
  "mappings": ";AAAA;AAAA,MAAA,KAAA,EAAA,UAAA,EAAA,GAAA,EAAA;;EAAA,KAAA,GAAQ,OAAA,CAAQ,SAAR;;EAEF,MAAN,MAAA,IAAA;IACI,WAAa,CAAA,GAAC,QAAD,CAAA;AACT,UAAA,CAAA,EAAA,GAAA,EAAA;MAAA,IAAC,CAAA,CAAD,GAAK,IAAI,KAAK,CAAC,IAAV,CAAA;MACL,KAAA,0CAAA;;QACI,IAAC,CAAA,GAAD,CAAK,CAAL;MADJ;IAFS;;IAIb,KAAO,CAAA,CAAA;AACH,aAAO,IAAC,CAAA,CAAC,CAAC,KAAH,CAAA;IADJ;;IAEP,GAAK,CAAA,CAAA;AACD,aAAO,IAAC,CAAA,CAAC,CAAC,GAAH,CAAA;IADN;;IAEL,GAAK,CAAC,OAAD,CAAA;aACD,IAAC,CAAA,CAAC,CAAC,GAAH,CAAO,OAAP,EAAgB,IAAhB;IADC;;IAEL,GAAK,CAAC,OAAD,CAAA;AACD,aAAO,IAAC,CAAA,CAAC,CAAC,OAAH,CAAW,OAAX,CAAoB,CAAA,CAAA;IAD1B;;IAEL,GAAK,CAAC,OAAD,CAAA;AACD,aAAO,IAAC,CAAA,CAAC,CAAC,GAAH,CAAO,OAAP;IADN;;IAEC,EAAN,IAAM,CAAA,CAAA;AACF,UAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,OAAA,EAAA;AAAA;AAAA;MAAA,KAAA,QAAA;QAAI,CAAC,CAAD,EAAI,CAAJ;qBACA,CAAA,MAAM,CAAN;MADJ,CAAA;;IADE;;EAfV;;EAmBM,aAAN,MAAA,WAAA;IACI,WAAa,QAAA,CAAA;MAAC,IAAC,CAAA;MACX,IAAC,CAAA,IAAD,GAAQ;IADC;;EADjB;;EAIM,QAAN,MAAA,MAAA;IACI,WAAa,CAAA,GAAC,QAAD,CAAA;AACT,UAAA,CAAA,EAAA,GAAA,EAAA;MAAA,IAAC,CAAA,IAAD,GAAQ,CAAA;MACR,IAAC,CAAA,IAAD,GAAQ;MACR,IAAC,CAAA,IAAD,GAAQ;MACR,KAAA,0CAAA;;QACI,IAAC,CAAA,GAAD,CAAK,CAAL;MADJ;IAJS;;IAMb,KAAO,CAAA,CAAA;AACH,aAAO,IAAC,CAAA,IAAD,KAAS,IAAC,CAAA;IADd;;IAEP,IAAM,CAAA,CAAA;AACF,aAAO,IAAC,CAAA,IAAD,KAAS,IAAC,CAAA,IAAD,GAAM;IADpB;;IAEN,GAAK,CAAC,OAAD,CAAA;MACD,IAAG,IAAC,CAAA,IAAD,CAAA,CAAH;QACI,MAAM,IAAI,UAAJ,CAAe,0BAAf,EADV;;MAEA,IAAC,CAAA,IAAK,CAAA,IAAC,CAAA,IAAD,CAAN,GAAe;aACf,IAAC,CAAA,IAAD;IAJC;;IAKL,GAAK,CAAA,CAAA;AACD,UAAA;MAAA,IAAG,IAAC,CAAA,KAAD,CAAA,CAAH;QACI,MAAM,IAAI,UAAJ,CAAe,6BAAf,EADV;;MAEA,CAAA,GAAI,IAAC,CAAA,IAAK,CAAA,IAAC,CAAA,IAAD;MACV,OAAO,IAAC,CAAA,IAAK,CAAA,IAAC,CAAA,IAAD;MACb,IAAC,CAAA,IAAD;AACA,aAAO;IANN;;EAhBT;;EAwBA,MAAM,CAAC,OAAP,GACI;IAAA,GAAA,EAAK,GAAL;IACA,UAAA,EAAY,UADZ;IAEA,KAAA,EAAO;EAFP;AAlDJ",
  "sourcesContent": [
    "dicts = require \"./dicts\"\n\nclass Set\n    constructor: (markings...) ->\n        @d = new dicts.Dict()\n        for m in markings\n            @add(m)\n    empty: ->\n        return @d.empty()\n    len: ->\n        return @d.len()\n    add: (marking) ->\n        @d.set(marking, null)\n    get: (marking) ->\n        return @d.getitem(marking)[0]\n    has: (marking) ->\n        return @d.has(marking)\n    iter: ->\n        for [m, _] from @d.iter()\n            yield m\n\nclass QueueError\n    constructor: (@message) ->\n        @name = \"QueueError\"\n\nclass Queue\n    constructor: (markings...) ->\n        @data = {}\n        @head = 0\n        @tail = 0\n        for m in markings\n            @put(m)\n    empty: ->\n        return @head == @tail\n    full: ->\n        return @head == @tail+1\n    put: (marking) ->\n        if @full()\n            throw new QueueError(\"cannot put on full queue\")\n        @data[@tail] = marking\n        @tail++\n    get: ->\n        if @empty()\n            throw new QueueError(\"cannot get from empty queue\")\n        m = @data[@head]\n        delete @data[@head]\n        @head++\n        return m\n\nmodule.exports =\n    Set: Set\n    QueueError: QueueError\n    Queue: Queue\n"
  ]
}